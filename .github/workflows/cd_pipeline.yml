# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ciroh-ua-website-cd

on:
  repository_dispatch:
    types: [build-completed]
  workflow_dispatch:  # For manual triggering if needed
  
jobs:
  deploy:
    runs-on: ubuntu-latest
      
    name: ${{ github.event.client_payload.env }} - Deploy ${{ github.event.client_payload.short_hash }} from ${{ github.event.client_payload.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Ensure detached HEAD state to avoid conflicts with the main branch
          ref: refs/heads/main

      # Get environment and version from dispatch payload
      - name: Set environment from dispatch
        run: |
          echo "Deploying commit ${{ github.event.client_payload.commit_hash }}"
          echo "Commit message: ${{ github.event.client_payload.commit_message }}"
          echo "Branch: ${{ github.event.client_payload.branch }}"
          echo "DEPLOY_ENV=${{ github.event.client_payload.env }}" >> $GITHUB_ENV
          echo "VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV
          echo "Deploying version: ${{ github.event.client_payload.version }}"
          echo "Environment: ${{ github.event.client_payload.env }}"
          
      - name: Display variable value
        run: |
          # Display value of variable
          echo "My version value is $VERSION"

      - name: Display variable value
        run: |
          # Display value of variable
          echo "My environment value is $DEPLOY_ENV"
          
      # https://github.com/marketplace/actions/download-workflow-artifact
      - name: Download a Build Artifact
        uses: dawidd6/action-download-artifact@v2.26.1
        with:
          workflow: ci_pipeline.yml
          name: build-${{ env.DEPLOY_ENV }}
          path: ./build/

      - name: Create and switch to a temporary deployment branch
        run: |
          git checkout -b temp-deploy-branch-$VERSION

        # Determine if this is a staging or production deployment
      - name: Set deployment target
        id: deployment-target
        run: |
          if [[ "$DEPLOY_ENV" == "production" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "TARGET_REPO=CIROH-UA/ciroh-ua.github.io" >> $GITHUB_ENV
            echo "Deploying to PRODUCTION environment"
          else
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
            echo "TARGET_REPO=CIROH-UA/docuhub-staging" >> $GITHUB_ENV
            echo "Deploying to STAGING environment"
          fi

      - name: GitHub Pages deployment
        uses: JamesIves/github-pages-deploy-action@v4.6.1
        with:
          token: ${{ secrets.SECRET_TO_PUSH_TO_CIROH_GITHUB_IO }}
          branch: main
          folder: build
          repository-name: ${{ env.TARGET_REPO }}
          
      - name: Post-deployment notification
        run: |
          if [[ "${{ env.ENVIRONMENT }}" == "production" ]]; then
            echo "Production deployment completed successfully!"
          else
            echo "Staging deployment completed successfully!"
            echo "To promote to production, create a tag with: git tag production-$VERSION && git push origin production-$VERSION"
          fi