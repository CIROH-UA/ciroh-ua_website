# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ciroh-ua-website-ci

on:
  push:
    branches: ["main"]
  workflow_call:
    # Map the workflow outputs to job outputs
    # https://docs.github.com/en/github-ae@latest/actions/using-workflows/reusing-workflows
  
      
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
  
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
       fetch-depth: 0
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Generate version
      id: version
      run: echo "::set-output name=VERSION::$(date +'%Y%m%d-%H%M%S')"

    - name: Create version file
      run: |
        echo "Build version:${{steps.version.outputs.VERSION}}"
        echo "${{steps.version.outputs.VERSION}}"  > version.txt
   
    - run: npm ci
    - run: npm run build --if-present
    - uses: actions/upload-artifact@v2
      with:
        name: version
        path: version.txt
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: build
        #name: ${{env.GitVersion_SemVer}}
        # A file, directory or wildcard pattern that describes what to upload
        path: build/
        # The desired behavior if no files are found using the provided path.

    - name: Create release
      uses: actions/create-release@v1
      id: create_release
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: v${{steps.version.outputs.VERSION}}
          release_name: Release v${{steps.version.outputs.VERSION}}
          draft: false
          prerelease: false
